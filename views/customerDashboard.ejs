<%- include('includes/header') %>

<script src="https://cdn.tailwindcss.com"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

<!-- Toast Notification System -->
<div id="toast-container" class="fixed top-5 right-5 z-50 flex flex-col gap-3"></div>

<div class="bg-gradient-to-br from-blue-50 to-white min-h-screen py-8 px-4">
<div class="max-w-6xl mx-auto">
 <!-- Page Header -->
    <div class="text-center mb-8">
      <h1 class="text-4xl font-bold text-blue-800 mb-2"><%= customer.customer_name %>'s Dashboard</h1>
      <p class="text-slate-600">Manage your profile, addresses, view your purchase history, and shop for services</p>

      <!-- Quick Stats -->
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mt-6 max-w-3xl mx-auto">
        <div class="bg-white rounded-lg shadow-md p-4 flex flex-col items-center">
          <div class="bg-blue-100 p-3 rounded-full mb-2">
            <i class="fas fa-wallet text-blue-600 text-xl"></i>
          </div>
          <span class="text-gray-600 text-sm">Balance</span>
          <span class="font-bold text-blue-800 text-lg">₹<%= customer.customer_balance_amt %></span>
        </div>

        <div class="bg-white rounded-lg shadow-md p-4 flex flex-col items-center">
          <div class="bg-green-100 p-3 rounded-full mb-2">
            <i class="fas fa-map-marker-alt text-green-600 text-xl"></i>
          </div>
          <span class="text-gray-600 text-sm">Addresses</span>
          <span class="font-bold text-green-800 text-lg"><%= addresses.length %></span>
        </div>

        <div class="bg-white rounded-lg shadow-md p-4 flex flex-col items-center">
          <div class="bg-yellow-100 p-3 rounded-full mb-2">
            <i class="fas fa-comment-dots text-yellow-600 text-xl"></i>
          </div>
          <span class="text-gray-600 text-sm">Feedbacks</span>
          <span class="font-bold text-yellow-800 text-lg"><%= feedbacks.length %></span>
        </div>

        <div class="bg-white rounded-lg shadow-md p-4 flex flex-col items-center">
          <div class="bg-purple-100 p-3 rounded-full mb-2">
            <i class="fas fa-shopping-cart text-purple-600 text-xl"></i>
          </div>
          <span class="text-gray-600 text-sm">Cart</span>
          <span id="cart-count" class="font-bold text-purple-800 text-lg">0</span>
        </div>
      </div>
    </div>

    <!-- Main Content Area -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Left Column - Profile Card -->
      <div class="lg:col-span-1">
        <div class="bg-white rounded-xl shadow-md overflow-hidden transform transition-transform hover:scale-102 hover:shadow-lg">
          <!-- Profile Header -->
          <div class="bg-gradient-to-r from-blue-600 to-blue-800 p-6 text-white relative">
            <div class="absolute top-2 right-2">
              <button id="edit-profile-toggle" class="bg-white/20 hover:bg-white/30 rounded-full p-2 transition-all">
                <i class="fas fa-edit text-white"></i>
              </button>
            </div>
            <div class="flex justify-center mb-4">
              <div class="relative">
                <img src="<%= customer.customer_photo %>" alt="Profile Photo" class="w-28 h-28 rounded-full border-4 border-white shadow-lg object-cover" id="profile-image">
                <div class="absolute bottom-0 right-0 bg-blue-500 rounded-full p-2 border-2 border-white hidden" id="photo-edit-button">
                  <i class="fas fa-camera text-white text-sm"></i>
                </div>
              </div>
            </div>
            <h2 class="text-2xl font-semibold text-center"><%= customer.customer_name %></h2>
            <p class="text-blue-100 text-center">Member since <%= new Date(customer.customer_created_at).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
          </div>

          <!-- Customer Details -->
          <div class="p-6" id="profile-display">
            <div class="space-y-4">
              <div class="flex items-center p-3 bg-gray-50 rounded-lg">
                <i class="fa-solid fa-id-card text-blue-600 w-8"></i>
                <span class="text-gray-700 font-medium">ID: <%= customer.customer_id %></span>
              </div>
              <div class="flex items-center p-3 bg-gray-50 rounded-lg">
                <i class="fa-solid fa-envelope text-blue-600 w-8"></i>
                <span class="text-gray-700"><%= customer.customer_email %></span>
              </div>
              <div class="flex items-center p-3 bg-gray-50 rounded-lg">
                <i class="fa-solid fa-phone text-blue-600 w-8"></i>
                <span class="text-gray-700"><%= customer.customer_ph_no %></span>
              </div>
              <div class="flex items-center p-3 bg-blue-50 rounded-lg">
                <i class="fa-solid fa-wallet text-blue-600 w-8"></i>
                <span class="text-blue-700 font-semibold">Balance: ₹<%= customer.customer_balance_amt %></span>
              </div>

              <button id="show-edit-form" class="mt-4 w-full py-2 px-4 bg-blue-100 text-blue-800 rounded-lg hover:bg-blue-200 transition flex items-center justify-center gap-2">
                <i class="fas fa-edit"></i> Edit Profile
              </button>
            </div>
          </div>

          <!-- Profile Edit Form (initially hidden) -->
          <div class="p-6 hidden" id="profile-edit-form">
            <h3 class="text-lg font-semibold text-blue-800 mb-4">Update Profile</h3>
            <form action="/customer/update/customerDashboard" method="POST" enctype="multipart/form-data" id="profile-update-form">
              <input type="hidden" name="customer_id" value="<%= customer.customer_id %>">

              <div class="space-y-4">
                <div>
                  <label for="customer_name" class="block text-sm font-medium text-gray-700 mb-1">Name</label>
                  <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <i class="fa-solid fa-user text-gray-400"></i>
                    </div>
                    <input type="text" id="customer_name" name="customer_name" value="<%= customer.customer_name %>" required class="block w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                  </div>
                </div>

                <div>
                  <label for="customer_email" class="block text-sm font-medium text-gray-700 mb-1">Email Address</label>
                  <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <i class="fa-solid fa-envelope text-gray-400"></i>
                    </div>
                    <input type="email" id="customer_email" name="customer_email" value="<%= customer.customer_email %>" required class="block w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                  </div>
                </div>

                <div>
                  <label for="customer_ph_no" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                  <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <i class="fa-solid fa-phone text-gray-400"></i>
                    </div>
                    <input type="tel" id="customer_ph_no" name="customer_ph_no" value="<%= customer.customer_ph_no %>" required class="block w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                  </div>
                </div>

                <div>
                  <label for="customer_photo" class="block text-sm font-medium text-gray-700 mb-1">Profile Photo</label>
                  <div class="mt-1 flex items-center">
                    <span class="inline-block h-12 w-12 rounded-full overflow-hidden bg-gray-100 mr-3">
                      <img id="preview-image" src="<%= customer.customer_photo %>" alt="Profile Preview" class="h-full w-full object-cover">
                    </span>
                    <div class="relative cursor-pointer bg-white rounded-md font-medium text-blue-600 hover:text-blue-500 focus-within:outline-none">
                      <span>Change</span>
                      <input id="customer_photo" name="customer_photo" type="file" accept="image/*" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" onchange="previewImage(event)">
                    </div>
                    <button type="button" id="remove-image" class="ml-3 text-sm text-red-500 hover:text-red-700 font-medium" onclick="removeImage()">Remove</button>
                  </div>
                </div>

                <div>
                  <label for="customer_password" class="block text-sm font-medium text-gray-700 mb-1">Confirm Password <span class="text-red-500">*</span></label>
                  <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <i class="fas fa-lock text-gray-400"></i>
                    </div>
                    <input type="password" id="customer_password" name="customer_password" required class="block w-full pl-10 pr-10 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    <button type="button" onclick="togglePassword()" class="absolute inset-y-0 right-0 pr-3 flex items-center">
                      <i id="password-toggle" class="fas fa-eye text-gray-400 hover:text-gray-600 cursor-pointer"></i>
                    </button>
                  </div>
                </div>

                <div class="flex gap-3">
                  <button type="button" id="cancel-edit" class="w-1/2 flex justify-center py-2 px-4 rounded-lg text-gray-700 bg-gray-200 hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition-all">
                    <i class="fas fa-times mr-2 mt-1"></i>Cancel
                  </button>

                  <button type="submit" id="submitBtn" class="w-1/2 flex justify-center py-2 px-4 rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all">
                    <div class="flex items-center">
                      <span id="submitText"><i class="fas fa-save mr-2"></i>Save</span>
                    </div>
                    <span id="loadingSpinner" class="hidden ml-2">
                      <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                    </span>
                  </button>
                </div>
              </div>
            </form>
          </div>
        </div>


      </div>

      <!-- Right Column - Tabbed Content -->
      <div class="lg:col-span-2">
        <div class="bg-white rounded-xl shadow-md overflow-hidden">
          <!-- Tab Navigation -->
          <div class="flex border-b">
            <button onclick="openTab('addresses')" id="addresses-tab" class="tab-btn flex-1 py-4 font-medium text-center text-blue-800 bg-blue-50 border-b-2 border-blue-600 transition-all">
              <i class="fa-solid fa-map-marker-alt mr-2"></i>Addresses
            </button>
            <button onclick="openTab('feedback')" id="feedback-tab" class="tab-btn flex-1 py-4 font-medium text-center text-gray-600 transition-all">
              <i class="fa-solid fa-comment-dots mr-2"></i>Feedback
            </button>
            <button onclick="openTab('shop')" id="shop-tab" class="tab-btn flex-1 py-4 font-medium text-center text-gray-600 transition-all">
              <i class="fa-solid fa-shopping-cart mr-2"></i>Shop
            </button>
            <button onclick="openTab('history')" id="history-tab" class="tab-btn flex-1 py-4 font-medium text-center text-gray-600 transition-all">
              <i class="fa-solid fa-history mr-2"></i>History
            </button>
          </div>

          <!-- Tab Content -->
          <div class="p-6">
            <!-- Addresses Tab -->
            <div id="addresses-content" class="tab-content">
              <div class="flex justify-between items-center mb-6">
                <h3 class="text-xl font-semibold text-blue-800">Your Saved Addresses</h3>
                <button onclick="toggleAddAddressForm()" class="flex items-center bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors">
                  <i class="fa-solid fa-plus mr-2"></i> Add New
                </button>
              </div>

              <!-- Add Address Form (Hidden by default) -->
              <div id="add-address-form" class="hidden mb-6 p-4 bg-blue-50 rounded-lg border border-blue-100 shadow-sm">
                <div class="flex justify-between items-center mb-4">
                  <h4 class="text-lg font-medium text-blue-800">Add New Address</h4>
                  <button onclick="toggleAddAddressForm()" class="text-gray-500 hover:text-gray-700">
                    <i class="fas fa-times"></i>
                  </button>
                </div>
                <form action="/customer/customerDashboard/address/add" method="POST" class="space-y-4" id="address-form">
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-1">Street:</label>
                      <input type="text" name="street" required class="w-full border border-gray-300 p-2 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    </div>
                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-1">City:</label>
                      <input type="text" name="city" required class="w-full border border-gray-300 p-2 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    </div>
                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-1">State:</label>
                      <input type="text" name="state" required class="w-full border border-gray-300 p-2 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    </div>
                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-1">ZIP Code:</label>
                      <input type="text" name="zip_code" required class="w-full border border-gray-300 p-2 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    </div>
                  </div>

                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Address Type:</label>
                    <div class="flex gap-4">
                      <label class="flex items-center">
                        <input type="radio" name="address_type" value="Home" checked class="mr-2 text-blue-600 focus:ring-blue-500">
                        <span>Home</span>
                      </label>
                      <label class="flex items-center">
                        <input type="radio" name="address_type" value="Work" class="mr-2 text-blue-600 focus:ring-blue-500">
                        <span>Work</span>
                      </label>
                      <label class="flex items-center">
                        <input type="radio" name="address_type" value="Other" class="mr-2 text-blue-600 focus:ring-blue-500">
                        <span>Other</span>
                      </label>
                    </div>
                  </div>

                  <div class="flex justify-end gap-2">
                    <button type="button" onclick="toggleAddAddressForm()" class="bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-lg transition-colors">Cancel</button>
                    <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors">Save Address</button>
                  </div>
                </form>
              </div>

              <!-- Address Cards -->
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <% if (addresses.length > 0) { %>
                <% addresses.forEach(address => { %>
                <div class="border rounded-lg shadow-sm hover:shadow-md transition p-4 bg-white relative group">
                  <!-- Address Type Badge -->
                  <div class="absolute -top-3 left-4 bg-blue-600 text-white text-xs font-semibold px-3 py-1 rounded-full shadow-sm">
                    <%= address.address_type %>
                  </div>

                  <!-- Action Buttons -->
                  <div class="absolute top-3 right-3 flex gap-2 opacity-0 group-hover:opacity-100 transition-opacity">
                    <button onclick="toggleEditForm('address-<%= address.address_id %>')" class="text-blue-600 hover:text-blue-800 bg-blue-50 p-1 rounded-full">
                      <i class="fa-solid fa-edit"></i>
                    </button>
                    <form action="/customer/customerDashboard/address/deleteOrEdit" method="POST" class="inline">
                      <input type="hidden" name="address_id" value="<%= address.address_id %>">
                      <button type="submit" name="action" value="delete" class="text-red-600 hover:text-red-800 bg-red-50 p-1 rounded-full" onclick="return confirm('Are you sure you want to delete this address?')">
                        <i class="fa-solid fa-trash-alt"></i>
                      </button>
                    </form>
                  </div>

                  <!-- Address Content -->
                  <div class="mt-3 text-gray-700 pt-2">
                    <p class="font-medium"><%= address.street %></p>
                    <p class="text-gray-600"><%= address.city %>, <%= address.state %> <%= address.zip_code %></p>
                  </div>

                  <!-- Edit Address Form (Hidden) -->
                  <form id="address-<%= address.address_id %>" action="/customer/customerDashboard/address/deleteOrEdit" method="POST" class="mt-4 space-y-3 hidden border-t pt-3">
                    <input type="hidden" name="address_id" value="<%= address.address_id %>">

                    <div class="grid grid-cols-2 gap-3">
                      <div>
                        <label for="address_type_<%= address.address_id %>" class="block text-xs font-medium text-gray-700">Address Type</label>
                        <select id="address_type_<%= address.address_id %>" name="address_type" required class="w-full border p-2 rounded mt-1">
                          <option value="Home" <%= address.address_type === 'Home' ? 'selected' : '' %>>Home</option>
                          <option value="Work" <%= address.address_type === 'Work' ? 'selected' : '' %>>Work</option>
                          <option value="Other" <%= address.address_type === 'Other' ? 'selected' : '' %>>Other</option>
                        </select>
                      </div>

                      <div>
                        <label for="street_<%= address.address_id %>" class="block text-xs font-medium text-gray-700">Street</label>
                        <input type="text" id="street_<%= address.address_id %>" name="street" value="<%= address.street %>" required class="w-full border p-2 rounded mt-1">
                      </div>
                    </div>

                    <div class="grid grid-cols-3 gap-3">
                      <div>
                        <label for="city_<%= address.address_id %>" class="block text-xs font-medium text-gray-700">City</label>
                        <input type="text" id="city_<%= address.address_id %>" name="city" value="<%= address.city %>" required class="w-full border p-2 rounded mt-1">
                      </div>

                      <div>
                        <label for="state_<%= address.address_id %>" class="block text-xs font-medium text-gray-700">State</label>
                        <input type="text" id="state_<%= address.address_id %>" name="state" value="<%= address.state %>" required class="w-full border p-2 rounded mt-1">
                      </div>

                      <div>
                        <label for="zip_code_<%= address.address_id %>" class="block text-xs font-medium text-gray-700">ZIP Code</label>
                        <input type="text" id="zip_code_<%= address.address_id %>" name="zip_code" value="<%= address.zip_code %>" required class="w-full border p-2 rounded mt-1">
                      </div>
                    </div>

                    <div class="flex justify-between">
                      <button type="button" onclick="toggleEditForm('address-<%= address.address_id %>')" class="bg-gray-300 text-gray-700 px-3 py-1 rounded hover:bg-gray-400 text-sm">Cancel</button>
                      <button type="submit" name="action" value="edit" class="bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 text-sm">Save Changes</button>
                    </div>
                  </form>
                </div>
                <% }) %>
                <% } else { %>
                <div class="col-span-2 py-8 text-center">
                  <div class="bg-blue-50 rounded-full h-16 w-16 flex items-center justify-center mx-auto mb-4">
                    <i class="fa-solid fa-map-marker-alt text-blue-600 text-2xl"></i>
                  </div>
                  <p class="text-gray-500">You haven't saved any addresses yet.</p>
                  <button onclick="toggleAddAddressForm()" class="mt-3 text-blue-600 hover:text-blue-800 font-medium flex items-center justify-center mx-auto">
                    <i class="fas fa-plus mr-2"></i>Add your first address
                  </button>
                </div>
                <% } %>
              </div>
            </div>

            <!-- Feedback Tab -->
            <div id="feedback-content" class="tab-content hidden">
              <div class="flex justify-between items-center mb-6">
                <h3 class="text-xl font-semibold text-blue-800">Your Feedback</h3>
                <button onclick="toggleAddFeedbackForm()" class="flex items-center bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors">
                  <i class="fa-solid fa-plus mr-2"></i> Add Feedback
                </button>
              </div>

              <!-- Add Feedback Form (Hidden by default) -->
              <div id="add-feedback-form" class="hidden mb-6 p-4 bg-yellow-50 rounded-lg border border-yellow-100 shadow-sm">
                <div class="flex justify-between items-center mb-4">
                  <h4 class="text-lg font-medium text-yellow-800">Share Your Experience</h4>
                  <button onclick="toggleAddFeedbackForm()" class="text-gray-500 hover:text-gray-700">
                    <i class="fas fa-times"></i>
                  </button>
                </div>
                <form action="/customer/customerDashboard/feedback/add" method="POST" class="space-y-4" id="feedback-form">
                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Rating:</label>
                    <div class="flex items-center bg-white p-3 rounded-lg border border-gray-200">
                      <div class="rating flex gap-1">
                        <% for(let i = 1; i <= 5; i++) { %>
                        <input type="radio" id="star<%= i %>" name="rating" value="<%= i %>" class="hidden" <%= i === 5 ? 'checked' : '' %>>
                        <label for="star<%= i %>" class="text-3xl cursor-pointer text-gray-300 hover:text-yellow-400 transition-colors">★</label>
                        <% } %>
                      </div>
                      <span class="ml-4 text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded-full">(Select 1-5 stars)</span>
                    </div>
                  </div>

                  <style>
                    .rating input[type="radio"]:checked+label {
                      color: #facc15;
                    }

                    .rating label:hover,
                    .rating label:hover~label {
                      color: #facc15;
                    }
                  </style>

                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Your Feedback:</label>
                    <textarea name="feedback_text" required class="w-full border border-gray-300 p-3 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent h-32" placeholder="Please share your experience with our services..."></textarea>
                  </div>

                  <div class="flex justify-end gap-2">
                    <button type="button" onclick="toggleAddFeedbackForm()" class="bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-lg transition-colors">Cancel</button>
                    <button type="submit" class="bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded-lg transition-colors">Submit Feedback</button>
                  </div>
                </form>
              </div>

              <!-- Feedback List -->
              <div class="space-y-4">
                <% if (feedbacks.length > 0) { %>
                <% feedbacks.forEach(feedback => { %>
                <div class="border rounded-lg shadow-sm hover:shadow-md transition p-4 bg-white">
                  <div class="flex justify-between items-start">
                    <div>
                      <div class="flex items-center mb-2">
                        <div class="text-yellow-400">
                          <% for(let i = 1; i <= 5; i++) { %>
                          <span><%= i <= feedback.rating ? '★' : '☆' %></span>
                          <% } %>
                        </div>
                        <span class="ml-2 text-gray-500 text-sm">
                          <%= new Date(feedback.feedback_date).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %>
                        </span>
                      </div>
                      <p class="text-gray-700"><%= feedback.feedback_text %></p>
                    </div>
                    <form action="/customer/customerDashboard/feedback/delete" method="POST" class="inline">
                      <input type="hidden" name="feedback_id" value="<%= feedback.feedback_id %>">
                      <button type="submit" class="text-red-500 hover:text-red-700" onclick="return confirm('Are you sure you want to delete this feedback?')">
                        <i class="fas fa-trash-alt"></i>
                      </button>
                    </form>
                  </div>
                </div>
                <% }) %>
                <% } else { %>
                <div class="py-8 text-center">
                  <div class="bg-yellow-50 rounded-full h-16 w-16 flex items-center justify-center mx-auto mb-4">
                    <i class="fa-solid fa-comment-dots text-yellow-500 text-2xl"></i>
                  </div>
                  <p class="text-gray-500">You haven't shared any feedback yet.</p>
                  <button onclick="toggleAddFeedbackForm()" class="mt-3 text-yellow-500 hover:text-yellow-700 font-medium flex items-center justify-center mx-auto">
                    <i class="fas fa-plus mr-2"></i>Share your first feedback
                  </button>
                </div>
                <% } %>
              </div>
            </div>

            <!-- Shop Tab -->
           <div id="shop-content" class="tab-content hidden">
              <div class="mb-6">
                <h3 class="text-xl font-semibold text-blue-800 mb-4">Shop Services</h3>
                
                <!-- Service Categories -->
                <div class="flex flex-wrap gap-2 mb-6">
                  <button onclick="filterServices('all')" id="filter-all" class="category-btn active bg-blue-100 hover:bg-blue-200 text-blue-800 px-4 py-2 rounded-lg transition-colors">
                    All
                  </button>
                  <% categories.forEach(category => { %>
                  <button onclick="filterServices('<%= category %>')" id="filter-<%= category %>" class="category-btn bg-gray-100 hover:bg-gray-200 text-gray-800 px-4 py-2 rounded-lg transition-colors">
                    <%= category.charAt(0).toUpperCase() + category.slice(1) %>
                  </button>
                  <% }) %>
                </div>
                
                <!-- Services Grid -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4" id="services-container">
                  <% services.forEach(service => { %>
                  <div class="bg-white rounded-lg shadow-md hover:shadow-lg transition p-4 flex flex-col h-full">
                  <div class="flex justify-between items-start mb-3">
                    <h4 class="font-semibold text-lg text-blue-800"><%= service.name %></h4>
                    <span class="inline-block px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs"><%= service.category %></span>
                  </div>
                  <div class="flex justify-between items-center mt-2">
                    <span class="text-lg font-bold text-blue-800">₹<%= service.price.toLocaleString() %></span>
                    <div class="flex gap-2">
                    <button onclick="showServiceModal('<%= JSON.stringify(service) %>')" class="bg-gray-100 hover:bg-gray-200 text-gray-700 p-2 rounded-full">
                      <i class="fas fa-info-circle"></i>
                    </button>
                    <button onclick="addToCart('<%= service.service_id %>')" class="bg-blue-600 hover:bg-blue-700 text-white p-2 rounded-full">
                      <i class="fas fa-shopping-cart"></i>
                    </button>
                    </div>
                  </div>
                  </div>
                  <% }) %>
                </div>
              </div>
            </div>

            <!-- History Tab -->
          <div id="history-content" class="tab-content hidden">
            <div class="mb-6">
             <h3 class="text-xl font-semibold text-blue-800 mb-4">Purchase History</h3>
              <div class="mb-6">
                <div id="purchase-history-container">
                  <div class="bg-blue-50 p-6 rounded-lg text-center">
                    <i class="fas fa-history text-blue-400 text-4xl mb-3"></i>
                    <h4 class="text-lg font-medium text-blue-800 mb-2">Your purchase history will appear here</h4>
                    <p class="text-gray-600">Once you make a purchase, your order history will be displayed in this section.</p>
                  </div>
                </div>
              </div>
            <div class="bg-white rounded-lg shadow overflow-hidden">
              <table class="min-w-full">
              <thead>
              <tr class="bg-gray-50 border-b">
              <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Services</th>
              <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Total Price</th>
              <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Added At</th>
              </tr>
              </thead>
              <tbody class="divide-y divide-gray-200"></tbody>
              <% 
              const groupedPurchaseHistory = purchaseHistory.reduce((acc, item) => {
              const key = `${item.customer_id}-${item.added_at}`;
              if (!acc[key]) {
                acc[key] = { added_at: item.added_at, services: [], total_price: 0 };
              }
              acc[key].services.push(item.service_name);
              acc[key].total_price += parseFloat(item.service_price || 0);
              return acc;
              }, {});
              const lastFiveDetails = Object.values(groupedPurchaseHistory).slice(-5);
              %>
              <% lastFiveDetails.forEach(group => { %>
              <tr>
              <td class="py-3 px-4"><%= group.services.join(', ') %></td>
              <td class="py-3 px-4">₹<%= group.total_price.toFixed(2) %></td>
              <td class="py-3 px-4"><%= new Date(group.added_at).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %> <%= new Date(group.added_at).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' }) %></td>
              </tr>
              <% }) %>
              </tbody>
              </table>
              </div>
             
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Shopping Cart Sidebar -->
<div id="cart-sidebar" class="fixed top-0 right-0 w-80 bg-white h-full shadow-lg transform translate-x-full transition-transform z-40">
  <div class="p-4">
    <div class="flex justify-between items-center mb-4">
      <h3 class="text-lg font-semibold text-gray-800">Your Cart</h3>
      <button id="close-cart" class="text-gray-500 hover:text-gray-700">
        <i class="fas fa-times"></i>
      </button>
    </div>
    
    <div id="cart-items" class="space-y-3"></div>
    
    <div class="mt-4 border-t pt-4">
      <div class="flex justify-between mb-2">
        <span class="text-gray-600">Subtotal:</span>
        <span id="cart-subtotal" class="font-semibold">₹0.00</span>
      </div>
      
      <button id="checkout-btn" class="w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors mt-4">
        Proceed to Checkout
      </button>
    </div>
  </div>
</div>

<!-- Cart Overlay -->
<div id="cart-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden"></div>

<!-- Modal for service details -->
<div id="service-modal" class="fixed inset-0 flex items-center justify-center z-50 hidden">
  <div class="bg-black bg-opacity-50 fixed inset-0"></div>
  <div class="bg-white rounded-xl shadow-xl p-6 max-w-md w-full relative z-10 mx-4">
    <button id="close-modal" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600">
      <i class="fas fa-times"></i>
    </button>
    <div id="modal-content" class="mt-2"></div>
  </div>
</div>

<!-- Confirmation Modal -->
<div id="confirm-modal" class="fixed inset-0 flex items-center justify-center z-50 hidden">
  <div class="fixed inset-0 bg-black bg-opacity-50"></div>
  <div class="bg-white rounded-lg shadow-lg p-6 max-w-sm w-full relative z-10 mx-4">
    <h3 id="confirm-title" class="text-lg font-semibold mb-3">Confirm Action</h3>
    <p id="confirm-message" class="text-gray-700 mb-4">Are you sure you want to continue?</p>
    <div class="flex justify-end gap-3">
      <button id="confirm-cancel" class="px-4 py-2 bg-gray-300 rounded-lg text-gray-700 hover:bg-gray-400">Cancel</button>
      <button id="confirm-ok" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">OK</button>
    </div>
  </div>
</div>

<script>
  // Global Variables
  let cart = [];

  // Services Data
  let services = <%- JSON.stringify(services) -%>;

  // Document Ready Function
  document.addEventListener('DOMContentLoaded', function() {
    initializeTabs();
    loadServices('all');  
    setupEventListeners();
    setupProfileImageHandling();
    setupRatingStars();
  });

  // Initialization Functions
  function initializeTabs() {
    // Get tab from URL if present
    const urlParams = new URLSearchParams(window.location.search);
    const tabParam = urlParams.get('tab');

    if (tabParam) {
      openTab(tabParam);
    }
  }

  function setupEventListeners() {
    // Profile Edit Form Toggle
    document.getElementById('show-edit-form').addEventListener('click', toggleProfileEdit);
    document.getElementById('cancel-edit').addEventListener('click', toggleProfileEdit);

    // Cart Toggle
    document.getElementById('close-cart').addEventListener('click', toggleCart);
    document.getElementById('cart-overlay').addEventListener('click', toggleCart);

    // Modal Close
    document.getElementById('close-modal').addEventListener('click', closeServiceModal);

    // Form Submissions
    setupFormSubmissions();
  }

  function setupFormSubmissions() {
    // Profile Update Form
    const profileForm = document.getElementById('profile-update-form');
    if (profileForm) {
      profileForm.addEventListener('submit', function(e) {
        e.preventDefault();

        // Show loading spinner
        document.getElementById('submitText').classList.add('hidden');
        document.getElementById('loadingSpinner').classList.remove('hidden');

        // Submit form
        setTimeout(() => {
          this.submit();
        }, 800);
      });
    }

    // Address Form
    const addressForm = document.getElementById('address-form');
    if (addressForm) {
      addressForm.addEventListener('submit', function(e) {
        showToast('Address added successfully!', 'success');
      });
    }

    // Feedback Form
    const feedbackForm = document.getElementById('feedback-form');
    if (feedbackForm) {
      feedbackForm.addEventListener('submit', function(e) {
        showToast('Thank you for your feedback!', 'success');
      });
    }
  }

  function setupProfileImageHandling() {
    // Preview uploaded image
    const fileInput = document.getElementById('customer_photo');
    if (fileInput) {
      fileInput.addEventListener('change', previewImage);
    }

    // Photo edit button toggle
    const editProfileToggle = document.getElementById('edit-profile-toggle');
    if (editProfileToggle) {
      editProfileToggle.addEventListener('click', function() {
        const photoEditButton = document.getElementById('photo-edit-button');
        photoEditButton.classList.toggle('hidden');
      });
    }
  }

  function setupRatingStars() {
    const ratingLabels = document.querySelectorAll('.rating label');
    ratingLabels.forEach(label => {
      label.addEventListener('click', function() {
        let id = this.getAttribute('for');
        let value = document.getElementById(id).value;

        // Update visual state
        ratingLabels.forEach(l => {
          l.style.color = parseInt(l.getAttribute('for').replace('star', '')) <= value ? '#facc15' : '#d1d5db';
        });
      });
    });
  }

  // UI Toggling Functions
  function openTab(tabName) {
    // Hide all tab contents
    const tabContents = document.querySelectorAll('.tab-content');
    tabContents.forEach(content => {
      content.classList.add('hidden');
    });

    // Deactivate all tab buttons
    const tabButtons = document.querySelectorAll('.tab-btn');
    tabButtons.forEach(button => {
      button.classList.remove('text-blue-800', 'bg-blue-50', 'border-b-2', 'border-blue-600');
      button.classList.add('text-gray-600');
    });

    // Activate selected tab
    document.getElementById(`${tabName}-tab`).classList.add('text-blue-800', 'bg-blue-50', 'border-b-2', 'border-blue-600');
    document.getElementById(`${tabName}-tab`).classList.remove('text-gray-600');
    document.getElementById(`${tabName}-content`).classList.remove('hidden');

    // Update URL
    history.replaceState(null, null, `?tab=${tabName}`);
  }

  function toggleProfileEdit() {
    const displayDiv = document.getElementById('profile-display');
    const editForm = document.getElementById('profile-edit-form');

    displayDiv.classList.toggle('hidden');
    editForm.classList.toggle('hidden');
  }

  function toggleAddAddressForm() {
    const addressForm = document.getElementById('add-address-form');
    addressForm.classList.toggle('hidden');
  }

  function toggleAddFeedbackForm() {
    const feedbackForm = document.getElementById('add-feedback-form');
    feedbackForm.classList.toggle('hidden');
  }

  function toggleEditForm(formId) {
    const form = document.getElementById(formId);
    form.classList.toggle('hidden');
  }

  function toggleCart() {
    const cartSidebar = document.getElementById('cart-sidebar');
    const cartOverlay = document.getElementById('cart-overlay');

    cartSidebar.classList.toggle('translate-x-full');
    cartOverlay.classList.toggle('hidden');
  }

  function closeServiceModal() {
    document.getElementById('service-modal').classList.add('hidden');
  }

  // Toast Notification
  function showToast(message, type = 'info') {
    const toastContainer = document.getElementById('toast-container');

    const toast = document.createElement('div');
    toast.className = `rounded-lg p-3 shadow-lg flex items-center justify-between max-w-xs transition-all transform translate-y-0 opacity-100`;

    // Set background color based on type
    if (type === 'success') {
      toast.classList.add('bg-green-500', 'text-white');
      toast.innerHTML = `
        <div class="flex items-center">
          <i class="fas fa-check-circle mr-2"></i>
          <span>${message}</span>
        </div>
        <button class="text-white hover:text-gray-200 ml-2" onclick="this.parentElement.remove()">
          <i class="fas fa-times"></i>
        </button>
      `;
    } else if (type === 'error') {
      toast.classList.add('bg-red-500', 'text-white');
      toast.innerHTML = `
        <div class="flex items-center">
          <i class="fas fa-exclamation-circle mr-2"></i>
          <span>${message}</span>
        </div>
        <button class="text-white hover:text-gray-200 ml-2" onclick="this.parentElement.remove()">
          <i class="fas fa-times"></i>
        </button>
      `;
    } else {
      toast.classList.add('bg-blue-500', 'text-white');
      toast.innerHTML = `
        <div class="flex items-center">
          <i class="fas fa-info-circle mr-2"></i>
          <span>${message}</span>
        </div>
        <button class="text-white hover:text-gray-200 ml-2" onclick="this.parentElement.remove()">
          <i class="fas fa-times"></i>
        </button>
      `;
    }

    toastContainer.appendChild(toast);

    // Auto-remove after 3 seconds
    setTimeout(() => {
      toast.classList.add('opacity-0', 'translate-y-2');
      setTimeout(() => {
        toast.remove();
      }, 300);
    }, 3000);
  }

  // Cart Functions
  function addToCart(serviceId) {
    // Ensure services array is loaded
    if (!services || services.length === 0) {
        showToast('Services data is not available', 'error');
        return;
    }

    // Find the service by ID
    const service = services.find(s => s.service_id === serviceId);
    if (!service) {
        showToast('Service not found', 'error');
        return;
    }

    // Check if the service is already in the cart
    const existingItem = cart.find(item => item.id === service.service_id);
    if (existingItem) {
        showToast(`${service.name} is already in the cart`, 'info');
        return;
    }

    // Add the service to the cart
    cart.push({
        id: service.service_id,
        name: service.name,
        price: service.price
    });

    // Update the cart display
    updateCartDisplay();

    // Show success message
    showToast(`${service.name} added to cart`, 'success');
}

  function removeFromCart(index) {
    cart.splice(index, 1);
    updateCartDisplay();
    showToast('Item removed from cart', 'info');
  }

  function updateCartDisplay() {
    const cartItemsContainer = document.getElementById('cart-items');
    const cartCount = document.getElementById('cart-count');
    const cartSubtotal = document.getElementById('cart-subtotal');

    // Update cart count
    cartCount.textContent = cart.length;

    // Clear current items
    cartItemsContainer.innerHTML = '';

    // Calculate subtotal
    let subtotal = 0;

    if (cart.length > 0) {
      // Add each item to the cart display
      cart.forEach((item, index) => {
        subtotal += item.price;

        const itemElement = document.createElement('div');
        itemElement.className = 'flex justify-between items-center p-3 bg-gray-50 rounded-lg';
        itemElement.innerHTML = `
          <div>
            <h4 class="font-medium text-gray-800">${item.name}</h4>
            <span class="text-blue-800 font-semibold">₹${item.price.toLocaleString()}</span>
          </div>
          <button onclick="removeFromCart(${index})" class="text-red-500 hover:text-red-700">
            <i class="fas fa-trash-alt"></i>
          </button>
        `;
        cartItemsContainer.appendChild(itemElement);
      });
    } else {
      // Show empty cart message
      cartItemsContainer.innerHTML = `
        <div class="text-center py-6">
          <div class="bg-purple-50 rounded-full h-16 w-16 flex items-center justify-center mx-auto mb-4">
            <i class="fas fa-shopping-cart text-purple-400 text-2xl"></i>
          </div>
          <p class="text-gray-500">Your cart is empty</p>
        </div>
      `;
    }

    // Update subtotal
    cartSubtotal.textContent = `₹${subtotal.toLocaleString()}`;
  }

  // Utility Functions
  function previewImage(event) {
    const preview = document.getElementById('preview-image');
    const file = event.target.files[0];

    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        preview.src = e.target.result;
        document.getElementById('profile-image').src = e.target.result;
      }
      reader.readAsDataURL(file);
    }
  }

  function removeImage() {
    document.getElementById('customer_photo').value = '';
    document.getElementById('preview-image').src = '/img/default-profile.jpg';
  }

  function togglePassword() {
    const passwordInput = document.getElementById('customer_password');
    const toggleIcon = document.getElementById('password-toggle');

    if (passwordInput.type === 'password') {
      passwordInput.type = 'text';
      toggleIcon.classList.remove('fa-eye');
      toggleIcon.classList.add('fa-eye-slash');
    } else {
      passwordInput.type = 'password';
      toggleIcon.classList.remove('fa-eye-slash');
      toggleIcon.classList.add('fa-eye');
    }
  }
  

// Load and Display Services
function loadServices(category) {
  const container = document.getElementById('services-container');
  container.innerHTML = '';
  
  let filteredServices = services;
  if (category !== 'all') {
    filteredServices = services.filter(service => service.category === category);
  }

  document.querySelectorAll('.category-btn').forEach(btn => {
    btn.classList.remove('active', 'bg-blue-100', 'text-blue-800');
    btn.classList.add('bg-gray-100', 'text-gray-800');
  });
  document.getElementById(`filter-${category}`).classList.add('active', 'bg-blue-100', 'text-blue-800');
  document.getElementById(`filter-${category}`).classList.remove('bg-gray-100', 'text-gray-800');

  if (filteredServices.length > 0) {
    filteredServices.forEach(service => {
      const serviceCard = document.createElement('div');
      serviceCard.className = 'bg-white rounded-lg shadow-md hover:shadow-lg transition p-4 flex flex-col h-full';
      serviceCard.innerHTML = `
        <div class="flex justify-between items-start mb-3">
          <h4 class="font-semibold text-lg text-blue-800">${service.name}</h4>
          <span class="inline-block px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">${service.category}</span>
        </div>
        <p class="text-gray-600 text-sm mb-4 flex-grow">${service.description}</p>
        <div class="flex justify-between items-center mt-2">
          <span class="text-lg font-bold text-blue-800">₹${service.price.toLocaleString()}</span>
          <div class="flex gap-2">
            <button onclick="showServiceModal(services.find(s => s.id === ${service.id}))" class="bg-gray-100 hover:bg-gray-200 text-gray-700 p-2 rounded-full">
              <i class="fas fa-info-circle"></i>
            </button>
            <button onclick="addToCart(${service.id})" class="bg-blue-600 hover:bg-blue-700 text-white p-2 rounded-full">
              <i class="fas fa-shopping-cart"></i>
            </button>
          </div>
        </div>
      `;
      container.appendChild(serviceCard);
    });
  } else {
    container.innerHTML = `
      <div class="col-span-2 py-8 text-center">
        <div class="bg-blue-50 rounded-full h-16 w-16 flex items-center justify-center mx-auto mb-4">
          <i class="fa-solid fa-search text-blue-600 text-2xl"></i>
        </div>
        <p class="text-gray-500">No services found in this category.</p>
      </div>
    `;
  }
}

function filterServices(category) {
  loadServices(category);
}

// Modal for Service Details
function showServiceModal(service) {
  const modal = document.getElementById('service-modal');
  const content = document.getElementById('modal-content');
  
  content.innerHTML = `
    <h3 class="text-xl font-semibold text-blue-800 mb-2">${service.name}</h3>
    <span class="inline-block px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm mb-3">${service.category}</span>
    <p class="text-gray-700 mb-4">${service.description}</p>
    <div class="flex justify-between items-center">
      <span class="text-xl font-bold text-blue-800">₹${service.price.toLocaleString()}</span>
      <button onclick="addToCart(${service.id})" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center">
        <i class="fas fa-shopping-cart mr-2"></i> Add to Cart
      </button>
    </div>
  `;
  
  modal.classList.remove('hidden');
}

function closeServiceModal() {
  document.getElementById('service-modal').classList.add('hidden');
}

</script>

<%- include('includes/footer') %>